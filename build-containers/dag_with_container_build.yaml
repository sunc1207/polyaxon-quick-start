version: 1.1
kind: component
name: automated-process
description: complete process with build and hyperparams tuning
inputs:
- {name: max_loss, type: float, value: 0.01, isOptional: true, description: "max loss to start a tuning job."}
- {name: top, type: int, value: 5, isOptional: true, description: "top jobs."}
run:
  kind: dag
  operations:
  - name: build
    hubRef: dokerizer
    params:
      destination:
        connection: docker-connection
        value: polyaxon/polyaxon-quick-start
    runPatch:
      init:
      - dockerfile:
          image: "tensorflow/tensorflow:2.2.0"
          run:
          - 'pip3 install --no-cache-dir -U polyaxon["s3","gcs","azure","polyboard","polytune"]'
          langEnv: 'en_US.UTF-8'
  - name: experiment
    urlRef: "https://raw.githubusercontent.com/polyaxon/polyaxon-quick-start/master/experimentation/typed.yaml"
    dependencies: [build]
    params:
      learning_rate:
        value: 0.005
      epochs:
        value: 10
  - name: tune
    urlRef: "https://raw.githubusercontent.com/polyaxon/polyaxon-quick-start/master/experimentation/typed.yaml"
    params:
      upstream_loss:
        ref: ops.experiment
        value: outputs.loss
        contextOnly: true
      max_loss:
        ref: dag
        value: inputs.max_loss
        contextOnly: true
    conditions: "{{ upstream_loss > max_loss }}"
    matrix:
      kind: random
      concurrency: 2
      numRuns: 20
      params:
        learning_rate:
          kind: linspace
          value: 0.001:0.1:5
        dropout:
          kind: choice
          value: [0.25, 0.3]
        conv_activation:
          kind: pchoice
          value: [[relu, 0.1], [sigmoid, 0.8]]
        epochs:
          kind: choice
          value: [5, 10]
  - name: best_model
    dependencies: [experiment, tune]
    trigger: all_done
    params:
      top:
        ref: dag
        value: inputs.top
        contextOnly: true
    component:
      run:
        kind: job
        init:
        - git: {url: "https://github.com/polyaxon/polyaxon-quick-start"}
        container:
          image: polyaxon/polyaxon-quick-start
          workingDir: "{{ globals.artifacts_path }}/polyaxon-quick-start"
          command: [python3, best_models.py]
          args: ["--project={{ globals.project_name }}", "--top={{ top }}"]
